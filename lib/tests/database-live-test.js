// Generated by CoffeeScript 1.9.2
(function() {
  var assert, databaseLiveOperations, ravendb, testDatastore, testino, util;

  testino = require('testino');

  assert = require('assert');

  util = require('util');

  ravendb = require('../ravendb');

  testDatastore = {
    defaultDatabase: ravendb('http://localhost:8080'),
    testDatabase: ravendb('http://localhost:8080', 'node-ravendb-tests')
  };

  module.exports = databaseLiveOperations = testino.createFixture('Database Live Operations');

  databaseLiveOperations.tests = {
    'should save a document with id "users/tony" into the "Users" collection': function() {
      var db;
      db = testDatastore.testDatabase;
      return db.datastore.createDatabase(db.name, function(createDatabaseError, createDatabaseResponse) {
        if (createDatabaseError != null) {
          assert.fail("Creating test database failed: " + (util.inspect(createDatabaseError)));
        }
        return db.saveDocument('Users', {
          id: 'users/tony',
          firstName: 'Tony',
          lastName: 'Heupel'
        }, function(error, response) {
          var metadata;
          if (error != null) {
            assert.fail("Initial save failed: " + (util.inspect(error)));
          }
          metadata = response['@metadata'];
          return db.getDocument('users/tony', function(getError, getResponse) {
            if (getError != null) {
              assert.fail("Retrieving saved document failed: " + (util.inspect(getError)));
            }
            console.log("Got " + (util.inspect(getResponse)));
            getResponse.lastName = 'Heupelsky';
            return db.saveDocument(null, getResponse, function(saveError, saveResponse) {
              if (saveError != null) {
                assert.fail(saveError.message);
              }
              console.log("Saved " + (util.inspect(saveResponse)));
              return db.datastore.deleteDatabase(db.name, function(deleteDatabaseError, deleteDatabaseResponse) {
                if (deleteDatabaseError != null) {
                  return assert.fail("Deleting test database failed: " + (util.inspect(deleteDatabaseError)));
                }
              });
            });
          });
        });
      });
    }
  };

  if (require.main === module) {
    console.log(module.exports.run());
  }

}).call(this);
